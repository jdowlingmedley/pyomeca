{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Motion Pyomeca is a python library allowing you to carry out a complete biomechanical analysis; in a simple, logical and concise way. Pyomeca documentation See Pyomeca's documentation site . Example Here is an example of a complete EMG pipeline in just one command: from pyomeca import Analogs3d emg = ( Analogs3d . from_c3d ( \"path/to/your/c3d.c3d\" , names = [ 'anterior_deltoid' , 'biceps' ]) . band_pass ( freq = 2000 , order = 4 , cutoff = [ 10 , 425 ]) . center () . rectify () . low_pass ( freq = 2000 , order = 4 , cutoff = 5 ) . normalization () . time_normalize () ) Features Object-oriented architecture where each class is associated with common and specialized functionalities: Markers3d : 3d markers positions Analogs3d : analogs (emg, force or any analog meca) GeneralizedCoordinate : generalized coordinate (joint angle) RotoTrans : roto-translation matrix Specialized functionalities include meca processing routine commonly used in biomechanics: filters, normalization, onset detection, outliers detection, derivative, etc. Each functionality can be chained. In addition to making it easier to write and read code, it allows you to add and remove analysis steps easily (such as Lego blocks). Each class inherits from a numpy array, so you can create your own analysis step easily. Easy reading and writing interface to common files in biomechanics: c3d (binary file used in biomechanics): from_c3d and to_c3d csv : from_csv and to_csv mat ( MATLAB file): from_mat and to_mat sto (OpenSim storage file): to_sto (must install pyosim) trc (OpenSim markers position file): to_trc (must install pyosim) Common linear algebra routine implemented: get Euler angles to/from roto-translation matrix, create a system of axes, set a rotation or translation, transpose or inverse, etc. Installation Using Conda First, install miniconda or anaconda . Then type: conda install pyomeca -c conda-forge Using pip First, you need to install python, swig and numpy. Then, follow the instructions to compile ezc3d . Finally, install pyomeca with: pip install git+https://github.com/pyomeca/pyomeca/ ` Integration with other modules Pyomeca is designed to work well with other libraries that we have developed: pyosim : interface between OpenSim and pyomeca to perform batch musculoskeletal analyses ezc3d : Easy to use C3D reader/writer in C++, Python and Matlab biorbd : C++ interface and add-ons to the Rigid Body Dynamics Library, with Python and Matlab binders. Bug Reports & Questions Pyomeca is Apache-licensed and the source code is available on GitHub . If any questions or issues come up as you use pyomeca, please get in touch via GitHub issues . We welcome any input, feedback, bug reports, and contributions.","title":"Home"},{"location":"#motion","text":"Pyomeca is a python library allowing you to carry out a complete biomechanical analysis; in a simple, logical and concise way.","title":"Motion"},{"location":"#pyomeca-documentation","text":"See Pyomeca's documentation site .","title":"Pyomeca documentation"},{"location":"#example","text":"Here is an example of a complete EMG pipeline in just one command: from pyomeca import Analogs3d emg = ( Analogs3d . from_c3d ( \"path/to/your/c3d.c3d\" , names = [ 'anterior_deltoid' , 'biceps' ]) . band_pass ( freq = 2000 , order = 4 , cutoff = [ 10 , 425 ]) . center () . rectify () . low_pass ( freq = 2000 , order = 4 , cutoff = 5 ) . normalization () . time_normalize () )","title":"Example"},{"location":"#features","text":"Object-oriented architecture where each class is associated with common and specialized functionalities: Markers3d : 3d markers positions Analogs3d : analogs (emg, force or any analog meca) GeneralizedCoordinate : generalized coordinate (joint angle) RotoTrans : roto-translation matrix Specialized functionalities include meca processing routine commonly used in biomechanics: filters, normalization, onset detection, outliers detection, derivative, etc. Each functionality can be chained. In addition to making it easier to write and read code, it allows you to add and remove analysis steps easily (such as Lego blocks). Each class inherits from a numpy array, so you can create your own analysis step easily. Easy reading and writing interface to common files in biomechanics: c3d (binary file used in biomechanics): from_c3d and to_c3d csv : from_csv and to_csv mat ( MATLAB file): from_mat and to_mat sto (OpenSim storage file): to_sto (must install pyosim) trc (OpenSim markers position file): to_trc (must install pyosim) Common linear algebra routine implemented: get Euler angles to/from roto-translation matrix, create a system of axes, set a rotation or translation, transpose or inverse, etc.","title":"Features"},{"location":"#installation","text":"","title":"Installation"},{"location":"#using-conda","text":"First, install miniconda or anaconda . Then type: conda install pyomeca -c conda-forge","title":"Using Conda"},{"location":"#using-pip","text":"First, you need to install python, swig and numpy. Then, follow the instructions to compile ezc3d . Finally, install pyomeca with: pip install git+https://github.com/pyomeca/pyomeca/ `","title":"Using pip"},{"location":"#integration-with-other-modules","text":"Pyomeca is designed to work well with other libraries that we have developed: pyosim : interface between OpenSim and pyomeca to perform batch musculoskeletal analyses ezc3d : Easy to use C3D reader/writer in C++, Python and Matlab biorbd : C++ interface and add-ons to the Rigid Body Dynamics Library, with Python and Matlab binders.","title":"Integration with other modules"},{"location":"#bug-reports-questions","text":"Pyomeca is Apache-licensed and the source code is available on GitHub . If any questions or issues come up as you use pyomeca, please get in touch via GitHub issues . We welcome any input, feedback, bug reports, and contributions.","title":"Bug Reports &amp; Questions"},{"location":"about/","text":"Rupit et raptae morique Spatio ima labitur falsa falle Lorem markdownum nocte ab suis, uritur monimenta inminet en sermone, Tereo. Est altius quoque frustra cum, vim turba sero tendens eodem si nulla, passuque alarum ut . Virtus praetulit incursu pariterque modo dubitabile rupit. test Lorem ipsum 1 dolor sit amet, consectetur adipiscing elit. 2 \"\"\" Bubble sort \"\"\" def bubble_sort ( items ): for i in range ( len ( items )): for j in range ( len ( items ) - 1 - i ): if items [ j ] > items [ j + 1 ]: items [ j ], items [ j + 1 ] = items [ j + 1 ], items [ j ] \"\"\" Bubble sort \"\"\" def bubble_sort ( items ): for i in range ( len ( items )): for j in range ( len ( items ) - 1 - i ): if items [ j ] > items [ j + 1 ]: items [ j ], items [ j + 1 ] = items [ j + 1 ], items [ j ] Quote Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Example Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Bug Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Warning Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Tip Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Info Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Note Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Theme extension prerequisites As the custom_dir variable is used for the theme extension process, the Material theme needs to be installed via pip and referenced with the name parameter in your mkdocs.yml . Arcus quam cunctatus ture est ille ingemuit Flentemque corpus animosos insigne Crenaee: et magnae plantis venturaque dixit pone. Titania nati per, hoc citi videre, montis quoque occidat ferunt, ait Aeneae genitore . Moraque in furtum referunt: degravat demum. Iri fuit est cecinisse vidit transit dextris sed miles. Non facto per sacraria veniam, sub mole fidissima posito multorum infecit, adhuc temporis. Tempore his certam caelique per et polis Heu est Hebe esse numina ipse ad Adorat distinguunt dixit parte Humani ille fingi serpens visum Cadmi et tellus Et illam Certe mare protinus in aethere cavis causa Ulixes quamvis: erat, Amythaone mordebat manifesta tellure ultor haec cui sagitta mortis, oscula placabilis . Et volat. Suo obstat, putat Athamanta. Cavernis numerare, obstem in per ait conceperat Aeolidae ignotissima ad. Fecissent nostri genetrix tempora montibus, quibus, vidi os! Tua tam silvis petunt, de arces fingebam velocia, nato. Alii per equi et breve. Iura his Nyseides si moram piscator pondus scitusque vestra fumabant negaretur finem exstimulata capillos vetetve ait. Versum inclusum , in de Aeacidae arcus, praedam fraude enim sitis, alis Insula mediis loqueretur dedere morte? Et porreximus forte et quae cognataque ora Dianae, oculis dextrasque ? Herculis in eunti pependit aureus paelex: gradu nota si Erebi sic , sicco numen templa Echion comitesque. Unda laevaque solvi pulcherrime repetit telo, multorum expellitur dotem; coronam. Lorem ipsum dolor sit amet, consectetur adipiscing elit. \u21a9 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. \u21a9","title":"About"},{"location":"about/#rupit-et-raptae-morique","text":"","title":"Rupit et raptae morique"},{"location":"about/#spatio-ima-labitur-falsa-falle","text":"Lorem markdownum nocte ab suis, uritur monimenta inminet en sermone, Tereo. Est altius quoque frustra cum, vim turba sero tendens eodem si nulla, passuque alarum ut . Virtus praetulit incursu pariterque modo dubitabile rupit.","title":"Spatio ima labitur falsa falle"},{"location":"about/#test","text":"Lorem ipsum 1 dolor sit amet, consectetur adipiscing elit. 2 \"\"\" Bubble sort \"\"\" def bubble_sort ( items ): for i in range ( len ( items )): for j in range ( len ( items ) - 1 - i ): if items [ j ] > items [ j + 1 ]: items [ j ], items [ j + 1 ] = items [ j + 1 ], items [ j ] \"\"\" Bubble sort \"\"\" def bubble_sort ( items ): for i in range ( len ( items )): for j in range ( len ( items ) - 1 - i ): if items [ j ] > items [ j + 1 ]: items [ j ], items [ j + 1 ] = items [ j + 1 ], items [ j ] Quote Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Example Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Bug Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Warning Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Tip Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Info Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Note Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Theme extension prerequisites As the custom_dir variable is used for the theme extension process, the Material theme needs to be installed via pip and referenced with the name parameter in your mkdocs.yml .","title":"test"},{"location":"about/#arcus-quam-cunctatus-ture-est-ille-ingemuit","text":"Flentemque corpus animosos insigne Crenaee: et magnae plantis venturaque dixit pone. Titania nati per, hoc citi videre, montis quoque occidat ferunt, ait Aeneae genitore . Moraque in furtum referunt: degravat demum. Iri fuit est cecinisse vidit transit dextris sed miles. Non facto per sacraria veniam, sub mole fidissima posito multorum infecit, adhuc temporis. Tempore his certam caelique per et polis Heu est Hebe esse numina ipse ad Adorat distinguunt dixit parte Humani ille fingi serpens visum Cadmi et tellus Et illam","title":"Arcus quam cunctatus ture est ille ingemuit"},{"location":"about/#certe-mare-protinus-in-aethere-cavis-causa","text":"Ulixes quamvis: erat, Amythaone mordebat manifesta tellure ultor haec cui sagitta mortis, oscula placabilis . Et volat. Suo obstat, putat Athamanta. Cavernis numerare, obstem in per ait conceperat Aeolidae ignotissima ad. Fecissent nostri genetrix tempora montibus, quibus, vidi os! Tua tam silvis petunt, de arces fingebam velocia, nato. Alii per equi et breve.","title":"Certe mare protinus in aethere cavis causa"},{"location":"about/#iura-his","text":"Nyseides si moram piscator pondus scitusque vestra fumabant negaretur finem exstimulata capillos vetetve ait. Versum inclusum , in de Aeacidae arcus, praedam fraude enim sitis, alis Insula mediis loqueretur dedere morte? Et porreximus forte et quae cognataque ora Dianae, oculis dextrasque ? Herculis in eunti pependit aureus paelex: gradu nota si Erebi sic , sicco numen templa Echion comitesque. Unda laevaque solvi pulcherrime repetit telo, multorum expellitur dotem; coronam. Lorem ipsum dolor sit amet, consectetur adipiscing elit. \u21a9 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. \u21a9","title":"Iura his"},{"location":"case-studies/","text":"","title":"Case Studies"},{"location":"getting-started/","text":"import motion import xarray xarray . set_options ( display_style = \"html\" ) import matplotlib.pyplot as plt import seaborn as sns sns . set ( context = \"talk\" , style = \"whitegrid\" ) sns . set_context () from pathlib import Path % load_ext lab_black data_path = Path ( \"../tests/data/markers_analogs.c3d\" ) data = motion . read_analogs_c3d ( data_path ) data Show/Hide data repr Show/Hide attributes /* CSS stylesheet for displaying xarray objects in jupyterlab. * */ :root { --xr-font-color0: var(--jp-content-font-color0, rgba(0, 0, 0, 1)); --xr-font-color2: var(--jp-content-font-color2, rgba(0, 0, 0, 0.54)); --xr-font-color3: var(--jp-content-font-color3, rgba(0, 0, 0, 0.38)); --xr-border-color: var(--jp-border-color2, #e0e0e0); --xr-disabled-color: var(--jp-layout-color3, #bdbdbd); --xr-background-color: var(--jp-layout-color0, white); --xr-background-color-row-even: var(--jp-layout-color1, white); --xr-background-color-row-odd: var(--jp-layout-color2, #eeeeee); } .xr-wrap { min-width: 300px; max-width: 700px; } .xr-header { padding-top: 6px; padding-bottom: 6px; margin-bottom: 4px; border-bottom: solid 1px var(--xr-border-color); } .xr-header > div, .xr-header > ul { display: inline; margin-top: 0; margin-bottom: 0; } .xr-obj-type, .xr-array-name { margin-left: 2px; margin-right: 10px; } .xr-obj-type { color: var(--xr-font-color2); } .xr-sections { padding-left: 0 !important; display: grid; grid-template-columns: 150px auto auto 1fr 20px 20px; } .xr-section-item { display: contents; } .xr-section-item input { display: none; } .xr-section-item input + label { color: var(--xr-disabled-color); } .xr-section-item input:enabled + label { cursor: pointer; color: var(--xr-font-color2); } .xr-section-item input:enabled + label:hover { color: var(--xr-font-color0); } .xr-section-summary { grid-column: 1; color: var(--xr-font-color2); font-weight: 500; } .xr-section-summary > span { display: inline-block; padding-left: 0.5em; } .xr-section-summary-in:disabled + label { color: var(--xr-font-color2); } .xr-section-summary-in + label:before { display: inline-block; content: '\u25ba'; font-size: 11px; width: 15px; text-align: center; } .xr-section-summary-in:disabled + label:before { color: var(--xr-disabled-color); } .xr-section-summary-in:checked + label:before { content: '\u25bc'; } .xr-section-summary-in:checked + label > span { display: none; } .xr-section-summary, .xr-section-inline-details { padding-top: 4px; padding-bottom: 4px; } .xr-section-inline-details { grid-column: 2 / -1; } .xr-section-details { display: none; grid-column: 1 / -1; margin-bottom: 5px; } .xr-section-summary-in:checked ~ .xr-section-details { display: contents; } .xr-array-wrap { grid-column: 1 / -1; display: grid; grid-template-columns: 20px auto; } .xr-array-wrap > label { grid-column: 1; vertical-align: top; } .xr-preview { color: var(--xr-font-color3); } .xr-array-preview, .xr-array-data { padding: 0 5px !important; grid-column: 2; } .xr-array-data, .xr-array-in:checked ~ .xr-array-preview { display: none; } .xr-array-in:checked ~ .xr-array-data, .xr-array-preview { display: inline-block; } .xr-dim-list { display: inline-block !important; list-style: none; padding: 0 !important; margin: 0; } .xr-dim-list li { display: inline-block; padding: 0; margin: 0; } .xr-dim-list:before { content: '('; } .xr-dim-list:after { content: ')'; } .xr-dim-list li:not(:last-child):after { content: ','; padding-right: 5px; } .xr-has-index { font-weight: bold; } .xr-var-list, .xr-var-item { display: contents; } .xr-var-item > div, .xr-var-item label, .xr-var-item > .xr-var-name span { background-color: var(--xr-background-color-row-even); margin-bottom: 0; } .xr-var-item > .xr-var-name:hover span { padding-right: 5px; } .xr-var-list > li:nth-child(odd) > div, .xr-var-list > li:nth-child(odd) > label, .xr-var-list > li:nth-child(odd) > .xr-var-name span { background-color: var(--xr-background-color-row-odd); } .xr-var-name { grid-column: 1; } .xr-var-dims { grid-column: 2; } .xr-var-dtype { grid-column: 3; text-align: right; color: var(--xr-font-color2); } .xr-var-preview { grid-column: 4; } .xr-var-name, .xr-var-dims, .xr-var-dtype, .xr-preview, .xr-attrs dt { white-space: nowrap; overflow: hidden; text-overflow: ellipsis; padding-right: 10px; } .xr-var-name:hover, .xr-var-dims:hover, .xr-var-dtype:hover, .xr-attrs dt:hover { overflow: visible; width: auto; z-index: 1; } .xr-var-attrs, .xr-var-data { display: none; background-color: var(--xr-background-color) !important; padding-bottom: 5px !important; } .xr-var-attrs-in:checked ~ .xr-var-attrs, .xr-var-data-in:checked ~ .xr-var-data { display: block; } .xr-var-data > table { float: right; } .xr-var-name span, .xr-var-data, .xr-attrs { padding-left: 25px !important; } .xr-attrs, .xr-var-attrs, .xr-var-data { grid-column: 1 / -1; } dl.xr-attrs { padding: 0; margin: 0; display: grid; grid-template-columns: 125px auto; } .xr-attrs dt, dd { padding: 0; margin: 0; float: left; padding-right: 10px; width: auto; } .xr-attrs dt { font-weight: normal; grid-column: 1; } .xr-attrs dt:hover span { display: inline-block; background: var(--xr-background-color); padding-right: 10px; } .xr-attrs dd { grid-column: 2; white-space: pre-wrap; word-break: break-all; } .xr-icon-database, .xr-icon-file-text2 { display: inline-block; vertical-align: middle; width: 1em; height: 1.5em !important; stroke-width: 0; stroke: currentColor; fill: currentColor; } xarray.DataArray channel : 38 time_frame : 11600 -0.02205 -0.01992 -0.01992 -0.02198 -0.02198 ... 0.0 0.0 0.0 0.0 0.0 array([[-0.02205157, -0.01991534, -0.01991534, ..., -0.02311969, -0.02311969, 0. ], [-0.01039797, -0.01024538, -0.01024538, ..., -0.01207644, -0.01207644, 0. ], [-0.01544412, -0.01437601, -0.01437601, ..., -0.01399454, -0.01399454, 0. ], ..., [ 0. , 0. , 0. , ..., 0. , 0. , 0. ], [ 0. , 0. , 0. , ..., 0. , 0. , 0. ], [ 0. , 0. , 0. , ..., 0. , 0. , 0. ]]) Coordinates: (2) channel (channel) <U14 'Voltage.1' 'Voltage.2' ... 'EMG9' array(['Voltage.1', 'Voltage.2', 'Voltage.3', 'Voltage.4', 'Voltage.5', 'Voltage.6', 'Delt_ant.EMG1', 'Infra.EMG10', 'Subscap.EMG11', '12.EMG12', '13.EMG13', '14.EMG14', '15.EMG15', '16.EMG16', 'Delt_med.EMG2', 'Delt_post.EMG3', 'Biceps.EMG4', 'Triceps.EMG5', 'Trap_sup.EMG6', 'Trap_inf.EMG7', 'Gd_dent.EMG8', 'Supra.EMG9', 'EMG1', 'EMG10', 'EMG11', 'EMG12', 'EMG13', 'EMG14', 'EMG15', 'EMG16', 'EMG2', 'EMG3', 'EMG4', 'EMG5', 'EMG6', 'EMG7', 'EMG8', 'EMG9'], dtype='<U14') time_frame (time_frame) float64 0.0 0.0005 0.001 ... 5.799 5.8 array([0.0000e+00, 5.0000e-04, 1.0000e-03, ..., 5.7985e+00, 5.7990e+00, 5.7995e+00]) Attributes: (4) first_frame : 0 last_frame : 11580 rate : 2000.0 unit : V muscles = [ \"Biceps.EMG4\" , \"Triceps.EMG5\" ] emg = data . sel ( channel = muscles ) emg . plot . line ( x = \"time_frame\" ) plt . show () emg_processed = ( emg . meca . band_pass ( freq = emg . rate , order = 4 , cutoff = [ 10 , 425 ]) . meca . center () . meca . abs () . meca . low_pass ( freq = emg . rate , order = 4 , cutoff = 10 ) . meca . normalize () . meca . time_normalize ( norm_time_frame = True ) ) emg_processed . plot . line ( x = \"time_frame\" ) plt . show () x = emg_processed . sel ( channel = \"Triceps.EMG5\" ) idx = x . meca . detect_onset ( threshold = x . mean (), n_above = 5 , n_below = 5 ) for i in idx : plt . axvline ( x = i [ 0 ], c = \"green\" ) plt . axvline ( x = i [ 1 ], c = \"red\" ) x . plot . line ( x = \"time_frame\" ) plt . show ()","title":"Getting Started"},{"location":"user-guide/","text":"","title":"User Guide"}]}